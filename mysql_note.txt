
# Name

*** Database Name, Table Name, Column Name  must be Snake case ***

*** Table Name must be plural (eg. users, roles, categories) ***

*** Column name should not be Double Context eg ( user table id => id ) ***

----------------------------------------------------------------------------------

# Type

*** DATETIME =>  Year-Month-Day Hour:Minute:Second Format (eg. 2020-01-11 14:30:22 ) ***

*** Timestamp start minute which is from 1979  Jan 1 to now ***

----------------------------------------------------------------------------------

# Length/Values

*** VARCHAR column type need Length but other type does not need it ***

----------------------------------------------------------------------------------

# Default

***  As defined:, NULL, CURRENT_TIMESTAMP *** 

----------------------------------------------------------------------------------

# Collation

*** eg.utf8mb4_general_ci ***

----------------------------------------------------------------------------------

# Attributes

*** If you choose int (or) float and choose UNSIGNED in Attributes,
 you cannot store minus value.So it can save data space***
 
----------------------------------------------------------------------------------

# Null

*** Null value will be store if NULL is check in checkbox ***

----------------------------------------------------------------------------------

#Index

*** Index မရှိတဲ့အခါ တစ်ခုခုလိုချင်ရင် တစ်ကြေeကာင်းချင်း
ကြေထာက်ရှာရမှာပါ။ Index ရှိရင်ကြေတာ့ လိုချင်တဲ့ Record ကို တန်းကြေထာက်လိုက်လို့ ရနိုင်ပါတယ်။ ***

*** Fulltext ဆိုတာ စာကြေတွရှာတဲ့အခါ အတိအကျမဟုတ်yဲ
အနည်းစပ်ဆံု းတန်oိုးကို Rank လုပ်ပြပီး gပန်ထုတ်ကြေပးနိုင်တဲ့ Search Index မျိုးပါ။  ***

*** Spatial ဆိုတာကကြေတာ့
Geolocation Data ကြေတွမှာလို Latitude နဲ့ Latitude ဆိုတဲ့ အချက်အလက်နှစ်ခု ဆက်စပ်သိမ်းဆည်းထား
တဲ့ အချက်အလက် အမျိုးအစား ကြေတွအတွက် အသံုးgပုရတဲ့ Index မျိုးပါ။ ***


*** Data ကြေတွ ရှာရတာgမန်ချင်တဲ့ Column ကြေတွမှာ Index ကို ကြေရွးထားကြေပးနိုင်ပါတယ်။ 
ဥပမာ - ကြေကျာင်းသားကြေတွရဲ့ အချက်အလက် ကြေတွကို သိမ်းထားပြပီး ခံု နံပါတ်နဲ့အရှာများရင် ခံု နံပါတ်ကို
Index လုပ်ရပါတယ်။ အမည်နဲ့ အရှာများရင် အမည်ကို Index လုပ်ရပါတယ်။ ***

*** Unique ကကြေတာ့ တန်oိုးကြေတွ gပန်ထပ်ရင် လက်မခံတဲ့ Index အမျိုးအစားပါ ။ ဥပမာ - ခံု နံပါတ်ဆိုတာ gပန်
ထပ်ရိုးထံုးစံ မရှိပါyူ း။ ဒါကြေeကာင့် Unique Index ကြေပးလိုက်ရင် ပိုကြေကာင်းပါတယ်။ ***

*** Primary နဲ့ Unique ဟာ Index လုပ်ပံု သကြေyာသyာဝ တူပါတယ်။ ကွဲgပားချက်ကကြေတာ့ Table တစ်ခုမှာ
Primary Index လုပ်ထားတဲ့ Column တစ်ခုသာ ရှိခွင့်ရှိgခင်း goစ်ပါတယ်။ Unique Index ကကြေတာ့ လို
သကြေလာက် သတ်မှတ်နိုင်ပါတယ်။ Table တစ်ခု
တည်ကြေဆာက်လိုက်တိုင်းမှာ id လို့အမည်ကြေပးထားတဲ့ Column တစ်ခုထည့်သွင်းပြပီး အဲ့ဒီ Column ကိုသာ
Primary အကြေနနဲ့ ထားသင့်ပါတယ်။***

----------------------------------------------------------------------------------

#AI

*** Auto Increment ***

----------------------------------------------------------------------------------

#Storage Engine

*** InnoDB ***


----------------------------------------------------------------------------------

# Testing Query

INSERT INTO `roles` (`id`, `name`, `value`) VALUES (NULL, 'User', '1'),
 (NULL, 'Manager', '2'), (NULL, 'Admin', '3');

INSERT INTO users (
 name, 
 email, 
 phone, 
 address, 
 password, 
 created_at
) VALUES (
 'Alice',
 'alice@gmail.com',
 '123456', 
 'Yangon', 
 'password', 
 NOW() // function for get current time (https://www.w3schools.com/mysql/mysql_ref_functions.asp)

 SELECT * FROM users LIMIT 10

 SELECT * FROM users LIMIT 5, 10

SELECT * FROM users WHERE role_id = 1 ORDER BY name LIMIT 10

SELECT users.name, users.role_id, roles.name AS role
FROM users LEFT JOIN roles ON users.role_id = roles.id

----------------------------------------------------------------------------------|

-- Create a new database
CREATE DATABASE newdatabase;

-- Copy tables and data
CREATE TABLE newdatabase.table1 AS SELECT * FROM mydatabase.table1;
-- Repeat for other tables

-- Update any references in your application code or other databases

-- Drop the old database
DROP DATABASE mydatabase;

----------------------------------------------------------------------------------|